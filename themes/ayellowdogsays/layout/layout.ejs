<!--动态线条背景-->
<script type="text/javascript"
  color="220,220,220" opacity='0.7' zIndex="-2" count="200" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js">
</script>

<%
// 页面类型：索引页面还是内容页面
var page_type = 'index'
if (['post', 'page', 'wiki', null].includes(page.layout)) {
  if (!page.nav_tabs) {
    page_type = 'content'
  }
}
// 文章类型：技术类文章/文学类文章
var article_type = theme.article.type
if (page.type?.length > 0) {
  article_type = page.type
} else if (theme.topic.tree[page.topic]?.type != null) {
  article_type = theme.topic.tree[page.topic]?.type
} else if (theme.wiki.tree[page.wiki]?.type != null) {
  article_type = theme.wiki.tree[page.wiki]?.type
}
// 是否缩进
var indent = false
if (page.indent != null) {
  indent = page.indent
} else if (theme.topic.tree[page.topic]?.indent != null) {
  indent = theme.topic.tree[page.topic]?.indent
} else if (theme.wiki.tree[page.wiki]?.indent != null) {
  indent = theme.wiki.tree[page.wiki]?.indent
} else if (theme.article.indent != null) {
  indent = theme.article.indent
} else {
  indent = article_type === 'story'
}

var site_background = ''
if (theme.style.site && theme.style.site['background-image']) {
  site_background += `<div class="sitebg">`
  site_background += `<div class="siteblur"></div>`
  site_background += `</div>`
}

var html = `<!DOCTYPE html>`
if (theme.style.prefers_theme === 'auto') {
    html += `<html lang="${page.lang}">`
} else {
  html += `<html lang="${page.lang}" data-theme="${theme.style.prefers_theme}">`
}
  html += partial('_partial/head')
  html += `<body>`
    html += site_background
    html += partial('_partial/cover/index')
    html += `<div class="l_body ${page_type}" id="start" layout="${page.layout}" type="${article_type}" ${indent ? 'text-indent' : ''}>`
      html += `<aside class="l_left">`
        html += `<div class="sidebg"></div>`
        html += `<div class="leftbar-container${theme.style.leftbar?.blur ? ' leftbar-blur' : ''}">`
          html += partial('_partial/sidebar/index_leftbar')
        html += `</div>`
      html += `</aside>`
      html += `<div class="l_main" id="main">`
        html += partial('_partial/sidebar/logo', {where: 'main'})
        html += body
        html += partial('_partial/main/footer')
        html += `<div class="main-mask" onclick="sidebar.dismiss()"></div>`
      html += `</div>`
      html += `<aside class="l_right">`
        html += partial('_partial/sidebar/index_rightbar')
      html += `</aside>`
      html += partial('_partial/menubtn')
    html += `</div>`
    html += `<div class="scripts">`
      html += json_ld()
      html += partial('_partial/scripts')
    html += `</div>`
  html += `</body>`
html += `</html>`
%>
<%- html %>
<!-- views/page.ejs -->
<!DOCTYPE html>
<html>
<head>
  <title>加载动画示例</title>
  <style>
    /* 加载动画样式 */
    #loader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: white;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      transition: opacity 0.3s;
    }
    
    .spinner {
      width: 50px;
      height: 50px;
      border: 5px solid rgba(0,0,0,0.1);
      border-radius: 50%;
      border-top-color: #3498db;
      animation: spin 1s ease-in-out infinite;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <!-- 加载动画容器 -->
  <div id="loader">
    <div class="spinner"></div>
  </div>

  <!-- 页面内容 -->
  <main id="content" style="display:none;">
    <h1>页面内容已加载</h1>
    <p>其他数据...</p>
  </main>

  <script>
    // 页面加载完成后隐藏动画
    window.addEventListener('load', () => {
      const loader = document.getElementById('loader');
      const content = document.getElementById('content');
      
      // 模拟延迟（实际使用时可以去掉）
      setTimeout(() => {
        loader.style.opacity = '0';
        content.style.display = 'block';
        
        // 动画结束后移除元素
        setTimeout(() => loader.remove(), 300);
      }, 1500); // 仅用于演示，真实项目去掉 setTimeout
    });
  </script>
</body>
</html>
<script src="https://cdn.bootcss.com/sweetalert/2.1.0/sweetalert.min.js"></script>
<script>
    let password = "555555";
    if (localStorage.getItem('pan_password') == password) {
 
    } else {
        checkPassword("success", "输入密码进入")
    }
 
    function checkPassword(ic, ti) {
        swal({
                title: "免责申明",
                text: "\n验证，输入555555确认你",
                closeOnConfirm: false,
                closeOnClickOutside: false,
                icon: ic,
                button: {
                    text: "确认",
                },
                content: {
                    element: "input",
                    attributes: {
                        placeholder: "Type your password",
                        type: "password",
                    },
                },
            })
            .then((value) => {
                if (value == '') {
                    checkPassword("warning", "请输入正确的密码");
                } else if (value == password) {
                    swal("欢迎！", {
                        button: false,
                    });
                    localStorage.setItem("pan_password", value);
                } else {
                    checkPassword("warning", "密码错误");
                }
            });
 
    }
</script>